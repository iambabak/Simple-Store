{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.bf6d5e2aaaa918e63baf.hot-update.js","sources":["webpack:///./components/general/TemporaryDrawer.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { connect} from 'react-redux'\r\nimport { countChangeCartData} from '../../actions/actions'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport './ResponsiveDrawer.css'\r\n\r\nconst styles =theme => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  root: {\r\n    padding: '20px',\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n});\r\n\r\nclass TemporaryDrawer extends React.Component {\r\n  state = {\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  };\r\n\r\n  toggleDrawer = (side, open) => () => {\r\n    this.setState({\r\n      [side]: open,\r\n    });\r\n  };\r\n  handleCountChange(count, slug){\r\n    const { dispatch} =this.props\r\n    const formData = {count: count , product: slug}\r\n    dispatch(countChangeCartData(formData))\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div \r\n      style={{width:'33vw'}}\r\n      // style={{width:'120%'}}\r\n      >\r\n     {this.props.cartDataOrigin &&\r\n          this.props.cartDataOrigin.cart_products.map(product => (\r\n            <div className={classes.root}>\r\n              {/* <Paper className={classes.paper}> */}\r\n              {console.log(\"productproductproduct\", product)}\r\n              <Grid container spacing={16}>\r\n                <Grid item>\r\n                  {/* <ButtonBase className={classes.image}> */}\r\n                    <img\r\n                    className=\"border imgDrawer\"\r\n                      // className={classes.img}\r\n                      alt=\"complex\"\r\n                      src={product.product.thumbnail}\r\n                    />\r\n                  {/* </ButtonBase> */}\r\n                </Grid>\r\n                <Grid style={{ marginTop: \"15px\", display:'inline',float:'left',paddingLeft: '35px' }} item xs={12} sm container>\r\n                  <Grid style={{display:'inline',float:'left',padding:'5px'}} item xs container direction=\"column\" spacing={16}>\r\n                    <Grid style={{padding:'0px'}} item xs>\r\n                      <Typography gutterBottom variant=\"subtitle1\" />\r\n                      <Typography gutterBottom>\r\n                        {product.product.title}\r\n                      </Typography>\r\n                      <Grid \r\n                      className=\"inlineBlock\"\r\n                      // style={{display:\"inline-block\"}}\r\n                      item container>\r\n                        <Grid \r\n                        className=\"inlineBlock\"\r\n                        // style={{display:\"inline-block\"}} \r\n                        item>\r\n                          <Typography color=\"textSecondary\">\r\n                            {product.product.price}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <div \r\n                        className=\"floatLeft\"\r\n                        style={{\r\n                          // float:'left',\r\n                          display:'flex'}}>\r\n                        <Grid item>\r\n                          <button\r\n                            style={{\r\n                              borderRadius: \"0px 10px 10px 0px\",\r\n                              boxShadow: \"none\",\r\n                              border: 'solid grey',\r\n                              background: 'none',\r\n                              height: \"22px\"\r\n                            }}\r\n                            onClick={() =>\r\n                              this.handleCountChange(\r\n                                product.count - 1,\r\n                                product.product.slug\r\n                              )\r\n                            }\r\n                          >\r\n                            -\r\n                          </button>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          style={{\r\n                            padding: \"3px 6px\",\r\n                            border: \"solid\",\r\n                            height: \"22px\"\r\n                          }}\r\n                        >\r\n                          <div>{product.count}</div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <button\r\n                          style={{\r\n                            borderRadius: \"10px 0px 0px 10px\",\r\n                            boxShadow: \"none\",\r\n                            border: 'solid grey',\r\n                            background: 'none',\r\n                            height: \"22px\"\r\n                          }}\r\n                            onClick={() =>\r\n                              this.handleCountChange(\r\n                                product.count + 1,\r\n                                product.product.slug\r\n                              )\r\n                            }\r\n                          >\r\n                            +\r\n                          </button>\r\n                        </Grid>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography variant=\"subtitle1\"> </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              {/* </Paper> */}\r\n            </div>\r\n          ))}\r\n    <Divider variant=\"middle\" />\r\n    <div style={{ padding: \"20px\"\r\n        // , display: \"flex\", flexDirection: \"row\" \r\n        }}>\r\n          <div style={{display:'inline'}}> مجموع</div>\r\n          <div \r\n          className='floatLeft'\r\n          // style={{float:'left'}}\r\n          >\r\n            {this.props.cartDataOrigin && this.props.cartDataOrigin.total_price}\r\n          </div>\r\n          {console.log(\"this.props.cartDataOrigin\", this.props.cartDataOrigin)}\r\n        </div>\r\n    </div>\r\n    //   <div className={classes.list}>\r\n    //     <List>\r\n    //         {this.props.cartDataOrigin && this.props.cartDataOrigin.cart_products.map(product => (\r\n    //             <List>\r\n                  \r\n    //               {console.log('this.props.cartDataOrigin.cart_products',this.props.cartDataOrigin.cart_products)}\r\n    //               <div className={classes.root}>\r\n    //   <Paper className={classes.paper}>\r\n    //               <Grid container spacing={16}>\r\n    //       <Grid item>\r\n    //         <ButtonBase className={classes.image}>\r\n    //           <img className={classes.img} \r\n    //           // style={{width: '30%'}}\r\n    //            alt=\"complex\" src={product.product.thumbnail} />\r\n    //         </ButtonBase>\r\n    //       </Grid>\r\n    //       <Grid item xs={12} sm container>\r\n    //         <Grid item xs container direction=\"column\" spacing={16}>\r\n    //           <Grid item xs>\r\n    //             <Typography gutterBottom variant=\"subtitle1\">\r\n    //               Standard license\r\n    //             </Typography>\r\n    //             <Typography gutterBottom>Full resolution 1920x1080 • JPEG</Typography>\r\n    //             <Typography color=\"textSecondary\">ID: 1030114</Typography>\r\n    //           </Grid>\r\n    //           <Grid item>\r\n    //             <Typography style={{ cursor: 'pointer' }}>Remove</Typography>\r\n    //           </Grid>\r\n    //         </Grid>\r\n    //         <Grid item>\r\n    //           <Typography variant=\"subtitle1\">$19.00</Typography>\r\n    //         </Grid>\r\n    //       </Grid>\r\n    //     </Grid>\r\n    //     </Paper>\r\n    // </div>\r\n    //               <Grid  \r\n    //     lg={12} md={12} lg md \r\n    //     container\r\n    //     >\r\n    //               <div>\r\n    //                 <img style={{width: '30%'}} src={product.product.thumbnail}></img>\r\n    //                 <div>{product.product.title}</div>\r\n    //                 <div>{product.product.price}</div>\r\n    //                 <button onClick={()=>this.handleCountChange(product.count-1, product.product.slug)}>-</button>\r\n    //                 <div>{product.count}</div>\r\n    //                 <button onClick={()=>this.handleCountChange(product.count+1, product.product.slug)}>+</button>\r\n    //                 </div>\r\n    //                 </Grid>\r\n    //             </List>\r\n    //         ))}\r\n    //       {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n    //           <div>ssss</div>\r\n    //         // <ListItem button key={text}>\r\n    //         //   <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n    //         //   <ListItemText primary={text} />\r\n    //         //   <div>sss</div>\r\n    //         // </ListItem>\r\n    //       ))}\r\n    //     </List>\r\n    //     <Divider />\r\n    //     <List>\r\n    //       {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n    //         <ListItem button key={text}>\r\n    //           <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n    //           <ListItemText primary={text} />\r\n    //         </ListItem>\r\n    //       ))}\r\n    //     </List>\r\n    //   </div>\r\n    );\r\n\r\n    const fullList = (\r\n      <div className={classes.fullList}>\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div style={{width:'40%'}}>\r\n        <div onClick={this.toggleDrawer('right', true)} style={{cursor:'pointer', whiteSpace: 'nowrap'}}>Open Left</div>\r\n        {/* <Button onClick={this.toggleDrawer('right', true)}>Open Right</Button>\r\n        <Button onClick={this.toggleDrawer('top', true)}>Open Top</Button>\r\n        <Button onClick={this.toggleDrawer('bottom', true)}>Open Bottom</Button> */}\r\n        <Drawer style={{width:'40%'}} open={this.state.left} onClose={this.toggleDrawer('left', false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            // onClick={this.toggleDrawer('left', false)}\r\n            onKeyDown={this.toggleDrawer('left', false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </Drawer>\r\n        <Drawer anchor=\"top\" open={this.state.top} onClose={this.toggleDrawer('top', false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer('top', false)}\r\n            onKeyDown={this.toggleDrawer('top', false)}\r\n          >\r\n            {fullList}\r\n          </div>\r\n        </Drawer>\r\n        <Drawer\r\n          anchor=\"bottom\"\r\n          open={this.state.bottom}\r\n          onClose={this.toggleDrawer('bottom', false)}\r\n        >\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer('bottom', false)}\r\n            onKeyDown={this.toggleDrawer('bottom', false)}\r\n          >\r\n            {fullList}\r\n          </div>\r\n        </Drawer>\r\n        <Drawer anchor=\"right\" open={this.state.right} onClose={this.toggleDrawer('right', false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer('right', false)}\r\n            onKeyDown={this.toggleDrawer('right', false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      // data: state.categoriesReducer.data\r\n      data: state.categoriesReducer.data,\r\n      auth: state.authReducer.token,\r\n      slug: state.addToCreditReducer.slug,\r\n      price: state.addToCreditReducer.total_price,\r\n      products: state.addToCreditReducer.products,\r\n      cartDataOrigin: state.getCartDataReducer.cartDataOrigin\r\n    };\r\n  };\r\n\r\n\r\nTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// export default withStyles(styles)(TemporaryDrawer);\r\nexport default connect(mapStateToProps)(withStyles(styles)(TemporaryDrawer));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AApBA;AAAA;AACA;AA2BA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AACA;AAGA;AAJA;AACA;;;;;;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;;;AAEA;AAAA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AACA;AAFA;AAKA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AADA;AAGA;AACA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AADA;AAGA;AAAA;AAHA;AAKA;AADA;AAGA;AAHA;AAIA;AAAA;AAKA;AACA;AACA;AACA;AAFA;AAFA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AARA;AAmBA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AARA;AAsBA;AAAA;AACA;AAAA;AA5FA;AAmGA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5LA;AA+LA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAHA;AASA;AACA;AAAA;AAAA;AAEA;AAAA;AAHA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAJA;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAJA;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;;;;AAhSA;AACA;AAkSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAEA;AACA;AADA;AACA;AAIA;;;;A","sourceRoot":""}